# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # service directories
        service:
          - ingest
          - processor
          - aggregator
          - query-api
    
    steps:
      # 1. Check out the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      # 3. Cache Go modules for faster runs
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 4. Install dependencies
      - name: Download dependencies
        run: go mod download
        working-directory: services/${{ matrix.service }}

      # 5. Lint
      - name: Lint with golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.58.0
          working-directory: services/${{ matrix.service }}

      # 6. Run tests
      - name: Test
        run: |
          go test ./... -v -coverprofile=coverage.out
        working-directory: services/${{ matrix.service }}

      # 7. Build binary
      - name: Build
        run: go build -v -o bin/${{ matrix.service }} .
        working-directory: services/${{ matrix.service }}
